library IEEE;
use IEEE.STD_LOGIC_1164.all;

entity stateChange is
port (pulse1, pulse2: in STD_LOGIC;
		z : out STD_LOGIC_vector(4 downto 0));
end stateChange;

architecture a of stateChange is
signal state :STD_LOGIC_vector(4 downto 0):="10000";
begin
	p1:process(pulse1)
		begin
		if pulse1'event and pulse1='1' then
			z <= state;
		end if;	
	end process p1;

	p2:process(pulse2)
		begin
		if pulse2'event and pulse2='1' then
				case state is
					when "10000" =>
						state <= "10100";
					when "10100" =>
						state <= "10010";
					when "10010" =>
						state <= "10001";
					when "10001" =>
						state <= "10110";
					when "10110" =>
						state <= "10011";
					when "10011" =>
						state <= "10101";
					when "10101" =>
						state <= "10111";
					when "10111" =>
						state <= "10000";
					when others => 
						state <= "10000";
				end case;
		end if;
	end process p2;			
end a ;